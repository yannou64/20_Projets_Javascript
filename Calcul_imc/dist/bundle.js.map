{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACXO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;UC/BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNyC;AACe;;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,0DAAc;AAClB;AACA;AACA,YAAY,qDAAS;AACrB;AACA,yBAAyB,kDAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://calcul_imc/./src/fonctions.js","webpack://calcul_imc/./src/variables.js","webpack://calcul_imc/webpack/bootstrap","webpack://calcul_imc/webpack/runtime/define property getters","webpack://calcul_imc/webpack/runtime/hasOwnProperty shorthand","webpack://calcul_imc/webpack/runtime/make namespace object","webpack://calcul_imc/./src/javascript.js"],"sourcesContent":["// fonction d'initialisation des paramètres\nconst initialisation = (poids, taille) => {\n  poids.value = 0;\n  taille.value = 0;\n}\n// fonction pour calculer l'imc\nconst calculIMC = (poids, taille) => {\n  return (\n    (parseInt(poids.value) / parseInt(taille.value) ** 2) *\n    10000\n  ).toFixed(1);\n}\n\nexport {initialisation, calculIMC}","export const imcTableau = [\n  {\n    imc: [0, 18.5],\n    remarque: \"Maigreur\",\n    color: \"midnightBlue\",\n  },\n  {\n    imc: [18.5, 25],\n    remarque: \"Bonne santé\",\n    color: \"green\",\n  },\n  {\n    imc: [25, 30],\n    remarque: \"Surpoid\",\n    color: \"lightCoral\",\n  },\n  {\n    imc: [30, 35],\n    remarque: \"Obésité modéré\",\n    color: \"orange\",\n  },\n  {\n    imc: [35, 40],\n    remarque: \"Obésité sévère\",\n    color: \"red\",\n  },\n  {\n    imc: [40, 100],\n    remarque: \"Obésité morbide\",\n    color: \"purple\",\n  },\n];\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { imcTableau } from \"./variables\";\nimport { calculIMC, initialisation } from \"./fonctions\";\n\nlet form = document.getElementById(\"formulaire\");\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  // On récupère nos éléments à consulter et modifier dans le dom\n  const poids = document.getElementById(\"poids\");\n  const taille = document.getElementById(\"taille\");\n  const imcIntitule = document.getElementById(\"imcIntitule\");\n  const afficheImc = document.getElementById(\"imc\");\n  // controle des inputs\n  if (\n    poids.value <= 0 ||\n    !Number.isInteger(parseInt(poids.value)) ||\n    taille.value <= 0 ||\n    !Number.isInteger(parseInt(taille.value))\n  ) {\n    alert(\"Erreur d'entrées\");\n    initialisation(poids, taille);\n  }\n  // Calcul de l'imc\n  let imc = calculIMC(poids, taille);\n  // Comparaison avec tableau imc\n  for (let indicateur of imcTableau) {\n    if (imc > indicateur.imc[0] && imc < indicateur.imc[1]) {\n      // Afficher l'imc\n      afficheImc.textContent = imc;\n      // Afficher la remarque\n      imcIntitule.textContent = indicateur.remarque;\n      imcIntitule.style.color = indicateur.color;\n    }\n  }\n});\n"],"names":[],"sourceRoot":""}